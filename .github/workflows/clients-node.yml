name: "clients/node"

defaults:
  run:
    working-directory: ./src/clients/node

on:
  workflow_call:
    secrets:
      TIGERBEETLE_NODE_PUBLISH_KEY:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: ./scripts/version_set.sh
      - run: ./scripts/build.sh

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: node-binaries
          path: src/clients/node/tigerbeetle-node-*.tgz

      # Integration tests depend on dist rather than the .tgz version
      # since these files refer to a local directory. There's not a
      # way to refer to a .tgz file in a package.json file with a
      # wildcard in it. If we hardcoded a version in the .tgz name of
      # the package.json dependency then it would break every time we
      # bumped the version.
      - name: Upload dist
        uses: actions/upload-artifact@v3
        with:
          name: node-dist
          path: src/clients/node/dist

  test_install:
    # We use self hosted runners for M1 here. See macos.yml for an explaination
    permissions:
      contents: read

    needs: build
    strategy:
      matrix:
        distro: [alpine, debian, ubuntu, fedora, rhelubi, amazonlinux, mac, mac-m1-12.6, mac-m1-13.2]

    runs-on: ${{ matrix.distro == 'mac' && 'macos-latest' || matrix.distro == 'mac-m1-12.6' && 'macos-12.6' || matrix.distro == 'mac-m1-13.2' && 'macos-13.2' || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v3

      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: node-binaries
          path: src/clients/node

      - run: ./scripts/test_install_on_${{ matrix.distro == 'mac' && 'host' || matrix.distro == 'mac-m1-12.6' && 'host' || matrix.distro == 'mac-m1-13.2' && 'host' || matrix.distro }}.sh
        env:
          SKIP_NODE_BUILD: true

# Disable version check for now, as it basically requires us to bump version in package.json for every chage.
# Now that Github enforces that our CI is green, that becomes very painful.
#
#  version_check:
#    needs: [test_install]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - run: npm install && ./scripts/version_check.sh

  publish:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: [test_install, samples_integration_test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: node-binaries
          path: src/clients/node

      - run: scripts/publish.sh
        env:
          TIGERBEETLE_NODE_PUBLISH_KEY: ${{ secrets.TIGERBEETLE_NODE_PUBLISH_KEY }}

  samples_integration_test:
    needs: build
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        sample: [basic, two-phase]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Download dist
        uses: actions/download-artifact@v3
        with:
          name: node-dist
          path: src/clients/node/dist

      - run: cd ../../../ && ./scripts/install.sh

      # Set up sample dependencies
      - run: cd samples/${{ matrix.sample }} && npm install

      - run: cd ../../../ && R_CWD=$(pwd)/src/clients/node/samples/${{ matrix.sample }} ./scripts/build.sh run_with_tb -- node main.js
